(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{132:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),l=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=l(n),b=r,m=d["".concat(c,".").concat(b)]||d[b]||p[b]||o;return n?a.a.createElement(m,i(i({ref:t},s),{},{components:n})):a.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=b;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},95:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return u})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return d}));var r=n(3),a=n(7),o=(n(0),n(132)),c=["components"],i={slug:"react-hook-adv",title:"Advanced React Hook (ft. useMemo & useCallback)"},u={unversionedId:"frontend/4-react/react-hook-adv",id:"frontend/4-react/react-hook-adv",isDocsHomePage:!1,title:"Advanced React Hook (ft. useMemo & useCallback)",description:"useMemo",source:"@site/docs/frontend/4-react/react-hook-adv.md",slug:"/frontend/4-react/react-hook-adv",permalink:"/TIL/docs/frontend/4-react/react-hook-adv",editUrl:"https://github.com/doinghun/TIL/edit/master/website/docs/frontend/4-react/react-hook-adv.md",version:"current",lastUpdatedAt:1632925168,sidebar:"frontend",previous:{title:"Introduction to TypeScript",permalink:"/TIL/docs/frontend/3-typescript/intro-to-ts"},next:{title:"Introduction to React Hook",permalink:"/TIL/docs/frontend/4-react/react-hook-intro"}},s=[{value:"useMemo",id:"usememo",children:[]},{value:"useReducer",id:"usereducer",children:[{value:"Specifying the initial state",id:"specifying-the-initial-state",children:[]}]}],l={rightToc:s};function d(e){var t=e.components,n=Object(a.a)(e,c);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"usememo"},"useMemo"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"useMemo(function, dependencies arrays)\n\nconst memoizedValue = useMemo(() => computeExpensiveValue(a, b), [a, b]);\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"useMemo")," will ONLY recompute the memoized value when one of the dependencies has changed."),Object(o.b)("p",null,"This optimization helps to avoid expensive calcualtions on every render"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://kentcdodds.com/blog/usememo-and-usecallback"},"https://kentcdodds.com/blog/usememo-and-usecallback")),Object(o.b)("h2",{id:"usereducer"},"useReducer"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"An alternative to ",Object(o.b)("inlineCode",{parentName:"li"},"useState"),". Accepts a reducer of type (state, action) => newState, and returns the current state paired with a dispatch method."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"useReducer")," is usually preferable to ",Object(o.b)("inlineCode",{parentName:"li"},"useState")," when you have complex state logic that involves multiple sub-values or when the next state depends on the previous one."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"useReducer")," also lets you optimize performance for components that trigger deep updates because you can pass dispatch down instead of callbacks.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'const [state, dispatch] = useReducer(reducer, initialArg, init);\n\nconst initialState = { count: 0 };\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case "increment":\n      return { count: state.count + 1 };\n    case "decrement":\n      return { count: state.count - 1 };\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n      Count: {state.count}\n      <button onClick={() => dispatch({ type: "decrement" })}>-</button>\n      <button onClick={() => dispatch({ type: "increment" })}>+</button>\n    </>\n  );\n}\n')),Object(o.b)("h3",{id:"specifying-the-initial-state"},"Specifying the initial state"),Object(o.b)("p",null,"There are two different ways to initialize useReducer state. You may choose either one depending on the use case."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"The simplest way is to pass the initial state as a second argument:",Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre",className:"language-js"},"const [state, dispatch] = useReducer(reducer, { count: initialCount });\n"))),Object(o.b)("li",{parentName:"ol"},"Lazy initialization")),Object(o.b)("p",null,"TODO: Read ",Object(o.b)("a",{parentName:"p",href:"https://www.robinwieruch.de/redux-vs-usereducer"},"https://www.robinwieruch.de/redux-vs-usereducer")))}d.isMDXComponent=!0}}]);
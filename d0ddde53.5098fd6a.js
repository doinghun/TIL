(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{123:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),c=(a(0),a(132)),l=["components"],i={slug:"js-regex",title:"Regex"},s={unversionedId:"frontend/2-javascript/js-regex",id:"frontend/2-javascript/js-regex",isDocsHomePage:!1,title:"Regex",description:"Understanding Regex",source:"@site/docs/frontend/2-javascript/js-regex.md",slug:"/frontend/2-javascript/js-regex",permalink:"/TIL/docs/frontend/2-javascript/js-regex",editUrl:"https://github.com/doinghun/TIL/edit/master/website/docs/frontend/2-javascript/js-regex.md",version:"current",lastUpdatedAt:1632925168,sidebar:"frontend",previous:{title:"OOP in JS [Part 2]",permalink:"/TIL/docs/frontend/2-javascript/js-oop-2"},next:{title:"Set vs Map",permalink:"/TIL/docs/frontend/2-javascript/js-set-vs-map"}},o=[{value:"Understanding Regex",id:"understanding-regex",children:[{value:"Test Method",id:"test-method",children:[]},{value:"Extract Matches",id:"extract-matches",children:[]},{value:"Cheatsheet",id:"cheatsheet",children:[]}]}],b={rightToc:o};function p(e){var t=e.components,a=Object(r.a)(e,l);return Object(c.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"understanding-regex"},"Understanding Regex"),Object(c.b)("h3",{id:"test-method"},"Test Method"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},".test()")," taks the regex, applies to string & return ",Object(c.b)("inlineCode",{parentName:"p"},"true")," or ",Object(c.b)("inlineCode",{parentName:"p"},"false")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let myString = "Hello, World!";\nlet myRegex = /Hello/;\nmyRegex.test(myString); // true\n')),Object(c.b)("h3",{id:"extract-matches"},"Extract Matches"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},"let extractStr = \"Extract the word 'coding' from this.\";\nlet codingRegex = /coding/;\nextractStr.match(codingRegex); // ['coding']\n")),Object(c.b)("h4",{id:"match-literal-strings-with-multiple-possibilities"},"Match Literal Strings with multiple possibilities"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let petString = "James has a pet cat.";\nlet petRegex = /dog|cat|bird/;\npetRegex.test(petString); // true\n')),Object(c.b)("h4",{id:"case-insensitive"},"Case-insensitive"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let myString = "Hello, World!";\nlet myRegex = /hello, world/i;\nmyRegex.test(myString); // true\n')),Object(c.b)("h4",{id:"find-more-than-the-first-match"},"Find more than the first match"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let testStr = "Repeat, Repeat, Repeat";\nlet ourRegex = /Repeat/g;\ntestStr.match(ourRegex); // [ "Repeat", "Repeat", "Repeat"]\n')),Object(c.b)("h4",{id:"match-anything-with-wildcard-period"},"Match Anything with Wildcard Period"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let testStr = "Let\'s have fun with regex!";\nlet unRegex = /.un/;\nunRegex.test(testStr); //true\n')),Object(c.b)("h4",{id:"match-single-character-with-multiple-possibilities"},"Match Single Character with Multiple Possibilities"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let bigStr = "big";\nlet bogStr = "bog";\nlet bgRegex = /b[aiu]g/;\nbigStr.match(bgRegex); // ["big"]\nbogStr.match(bgRegex); // null\n')),Object(c.b)("h4",{id:"match-letters-range"},"Match Letters Range"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let catStr = "cat";\nlet batStr = "bat";\nlet matStr = "mat";\nlet bgRegex = /[a-e]at/;\ncatStr.match(bgRegex); // Returns ["cat"]\nbatStr.match(bgRegex); // Returns ["bat"]\nmatStr.match(bgRegex); // Returns null\n')),Object(c.b)("h4",{id:"match-numbers--letters-range"},"Match Numbers & Letters Range"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let jennyStr = "Jenny8675309";\nlet myRegex = /[a-z0-9]/gi;\n// matches all letters and numbers in jennyStr\njennyStr.match(myRegex);\n')),Object(c.b)("h4",{id:"negated-character-sets"},"Negated Character Sets"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"[^]")," used like NOT"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},"let quoteSample = \"3 blind mice.\";\nlet myRegex = /[^aeiou0-9]/gi;\nquoteSample.match(myRegex);\n//[ ' ', 'b', 'l', 'n', 'd', ' ', 'm', 'c', '.' ]\n")),Object(c.b)("h4",{id:"match-characters-occuring-1-or-more-times"},"Match Characters occuring 1 or more times"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},"let difficultSpelling = \"Mississippi\";\nlet myRegex = /s+/g;\ndifficultSpelling.match(myRegex); //['ss', 'ss']\n")),Object(c.b)("h4",{id:"match-characters-occuring-0-or-more-times"},"Match Characters occuring 0 or more times"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let soccerWord = "goooooooooal!";\nlet goRegex = /go*/;\nsoccerWord.match(goRegex)["gooooooooo"];\n')),Object(c.b)("h4",{id:"lazy-matching"},"Lazy Matching"),Object(c.b)("p",null,"By default, the longest possible part of a string fitting the regex pattern is returned (",Object(c.b)("em",{parentName:"p"},"greedy match"),").\nUse ",Object(c.b)("inlineCode",{parentName:"p"},"*")," finds the smallest possible part of the string."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},"let text = \"<h1>Winter is coming</h1>\";\nlet myRegex = /<h1*?>/;\ntext.match(myRegex); //[ '<h1>' ]\n")),Object(c.b)("h4",{id:"match-beginning-string-patterns"},"Match Beginning String Patterns"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"^")," without character set (eg. ",Object(c.b)("inlineCode",{parentName:"p"},"[a-z]"),") used to search for patterns at the beginning og strings"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let rickyAndCal = "Cal and Ricky both like racing.";\nlet calRegex = /^Cal/;\ncalRegex.test(rickyAndCal); // true\n')),Object(c.b)("h4",{id:"match-ending-string-patterns"},"Match Ending String Patterns"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let caboose = "The last car on a train is the caboose";\nlet lastRegex = /caboose$/; // Change this line\nlastRegex.test(caboose); // true\n')),Object(c.b)("h4",{id:"shortcuts"},"Shortcuts"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"All Letters & Numbers",Object(c.b)("inlineCode",{parentName:"li"},"/\\w/")," === ",Object(c.b)("inlineCode",{parentName:"li"},"/[A-Za-z0-9_]/")),Object(c.b)("li",{parentName:"ul"},"All Except Letters & Numbers: ",Object(c.b)("inlineCode",{parentName:"li"},"/\\W/")," === ",Object(c.b)("inlineCode",{parentName:"li"},"/[^A-Za-z0-9_]/")),Object(c.b)("li",{parentName:"ul"},"All Numbers: ",Object(c.b)("inlineCode",{parentName:"li"},"/\\d/")," === ",Object(c.b)("inlineCode",{parentName:"li"},"/[0-9]/")),Object(c.b)("li",{parentName:"ul"},"All Non-Numbers: ",Object(c.b)("inlineCode",{parentName:"li"},"/[^0-9]/")," === ",Object(c.b)("inlineCode",{parentName:"li"},"/\\D/"))),Object(c.b)("h4",{id:"application---restric-possible-usernames"},"Application - Restric Possible Usernames"),Object(c.b)("p",null,"Conditions:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Only use alpha-numeric characters.")),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"The only numbers in the username have to be at the end. There can be zero or more of them at the end.")),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Letters can be lowercase and uppercase.")),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Have to be at least two characters long. A two-character username can only use alphabet letters as characters."))),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let username = "JackOfAllTrades";\nlet userCheck = /^[a-z]([0-9][0-9]+|[a-z]+\\d*)$/i;\nuserCheck.test(username); // true\n')),Object(c.b)("h4",{id:"match-whitespace"},"Match Whitespace"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let whiteSpace = "Whitespace. Whitespace everywhere!";\nlet spaceRegex = /\\s/g;\nwhiteSpace.match(spaceRegex);\n// Returns [" ", " "]\n')),Object(c.b)("h4",{id:"match-non-whitespace-characters"},"Match Non-Whitespace Characters"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let whiteSpace = "Whitespace. Whitespace everywhere!";\nlet nonSpaceRegex = /\\S/g;\nwhiteSpace.match(nonSpaceRegex).length; // Returns 32\n')),Object(c.b)("h4",{id:"specify-upper-and-lower-number-of-matches"},"Specify Upper and Lower Number of Matches"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let A4 = "aaaah";\nlet A2 = "aah";\nlet multipleA = /a{3,5}h/;\nmultipleA.test(A4); // Returns true\nmultipleA.test(A2); // Returns false\n')),Object(c.b)("h4",{id:"specify-only-the-lower-number-of-matches"},"Specify Only the Lower Number of Matches"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let A4 = "haaaah";\nlet A2 = "haah";\nlet multipleA = /ha{3,}h/;\nmultipleA.test(A4); // Returns true\nmultipleA.test(A2); // Returns false\n')),Object(c.b)("h4",{id:"specify-exact-number-of-matches"},"Specify Exact Number of Matches"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let A4 = "haaaah";\nlet A3 = "haaah";\nlet multipleHA = /ha{3}h/;\nmultipleHA.test(A4); // Returns false\nmultipleHA.test(A3); // Returns true\n')),Object(c.b)("h4",{id:"check-for-all-or-none"},"Check for All or None"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let american = "color";\nlet british = "colour";\nlet rainbowRegex = /colou?r/;\nrainbowRegex.test(american); // Returns true\nrainbowRegex.test(british); // Returns true\n')),Object(c.b)("h4",{id:"positive-and-negative-lookahead"},"Positive and Negative Lookahead"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"A positive lookahead is used as (?=...) where the ... is the required part that is not matched."),Object(c.b)("li",{parentName:"ul"},"A negative lookahead is used as (?!...) where the ... is the pattern that you do not want to be there.")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let quit = "qu";\nlet noquit = "qt";\nlet quRegex = /q(?=u)/;\nlet qRegex = /q(?!u)/;\nquit.match(quRegex); // Returns ["q"]\nnoquit.match(qRegex); // Returns ["q"]\n')),Object(c.b)("h4",{id:"check-for-mixed-grouping-of-characters"},"Check For Mixed Grouping of Characters"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let testStr = "Pumpkin";\nlet testRegex = /P(engu|umpk)in/;\ntestRegex.test(testStr);\n// Returns true\n')),Object(c.b)("h4",{id:"use-capture-groups-to-search-and-replace"},"Use Capture Groups to Search and Replace"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'let str = "one two three";\nlet fixRegex = /(\\w+)\\s(\\w+)\\s(\\w+)/; // Change this line\nlet replaceText = "$3 $2 $1"; // Change this line\nstr.replace(fixRegex, replaceText);\n// "three two one"\n')),Object(c.b)("h3",{id:"cheatsheet"},"Cheatsheet"),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://ihateregex.io/cheatsheet"},"https://ihateregex.io/cheatsheet")))}p.isMDXComponent=!0},132:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return g}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),b=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=b(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,l=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),p=b(a),h=n,g=p["".concat(l,".").concat(h)]||p[h]||u[h]||c;return a?r.a.createElement(g,i(i({ref:t},o),{},{components:a})):r.a.createElement(g,i({ref:t},o))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,l=new Array(c);l[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var o=2;o<c;o++)l[o]=a[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}h.displayName="MDXCreateElement"}}]);
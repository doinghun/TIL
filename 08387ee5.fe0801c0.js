(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{132:function(t,e,n){"use strict";n.d(e,"a",(function(){return b})),n.d(e,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var c=r.a.createContext({}),s=function(t){var e=r.a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},b=function(t){var e=s(t.components);return r.a.createElement(c.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.a.createElement(r.a.Fragment,{},e)}},m=r.a.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,l=t.parentName,c=p(t,["components","mdxType","originalType","parentName"]),b=s(n),m=a,d=b["".concat(l,".").concat(m)]||b[m]||u[m]||o;return n?r.a.createElement(d,i(i({ref:e},c),{},{components:n})):r.a.createElement(d,i({ref:e},c))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return i})),n.d(e,"metadata",(function(){return p})),n.d(e,"rightToc",(function(){return c})),n.d(e,"default",(function(){return b}));var a=n(3),r=n(7),o=(n(0),n(132)),l=["components"],i={slug:"python-matplotlib",title:"Intro to Matplotlib"},p={unversionedId:"data/1-python/python-matplotlib",id:"data/1-python/python-matplotlib",isDocsHomePage:!1,title:"Intro to Matplotlib",description:"Intro",source:"@site/docs/data/1-python/python-matplotlib.md",slug:"/data/1-python/python-matplotlib",permalink:"/TIL/docs/data/1-python/python-matplotlib",editUrl:"https://github.com/doinghun/TIL/edit/master/website/docs/data/1-python/python-matplotlib.md",version:"current",lastUpdatedAt:1632925168,sidebar:"data",previous:{title:"Python Bootcamp",permalink:"/TIL/docs/data/1-python/python-bootcamp"},next:{title:"Numpy in Python",permalink:"/TIL/docs/data/1-python/python-numpy"}},c=[{value:"Intro",id:"intro",children:[{value:"Installation",id:"installation",children:[]},{value:"Importing",id:"importing",children:[]}]},{value:"Basic Example",id:"basic-example",children:[]},{value:"Basic Matplotlib Commands",id:"basic-matplotlib-commands",children:[]},{value:"Creating Multiplots on Same Canvas",id:"creating-multiplots-on-same-canvas",children:[]}],s={rightToc:c};function b(t){var e=t.components,n=Object(r.a)(t,l);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"intro"},"Intro"),Object(o.b)("p",null,'Matplotlib is the "grandfather" library of data visualization with Python. To replicate MatLab\'s plotting capabilities in Python.'),Object(o.b)("p",null,"It is an excellent 2D and 3D graphics library for generating scientific figures."),Object(o.b)("h3",{id:"installation"},"Installation"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"conda install matplotlib")," or ",Object(o.b)("inlineCode",{parentName:"p"},"pip install matplotlib")),Object(o.b)("h3",{id:"importing"},"Importing"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-py"},"import matplotlib.pyplot as plt\n%matplotlib inline # Only for jupyter notebooks\nplt.show() # At end of all plotting commands for other editor\n")),Object(o.b)("h2",{id:"basic-example"},"Basic Example"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-py"},"import numpy as np\nx = np.linspace(0,5,11) # 0 to 5, 11 endpoints\n# array([0. , 0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5. ])\n\ny = x ** 2\n# array([ 0.  ,  0.25,  1.  ,  2.25,  4.  ,  6.25,  9.  , 12.25, 16.  ,20.25, 25.  ])\n")),Object(o.b)("h2",{id:"basic-matplotlib-commands"},"Basic Matplotlib Commands"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-py"},"plt.plot(x, y, 'r') # 'r' is the color red\nplt.xlabel('X Axis Title Here')\nplt.ylabel('Y Axis Title Here')\nplt.title('String Title Here')\nplt.show()\n")),Object(o.b)("h2",{id:"creating-multiplots-on-same-canvas"},"Creating Multiplots on Same Canvas"),Object(o.b)("p",null,"Functional"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-py"},"# plt.subplot(nrows, ncols, plot_number)\nplt.subplot(1,2,1)\nplt.plot(x, y, 'r--') # More on color options later\nplt.subplot(1,2,2)\nplt.plot(y, x, 'g*-')\n")),Object(o.b)("h1",{id:"matplotlib-object-oriented-method"},"Matplotlib Object Oriented Method"))}b.isMDXComponent=!0}}]);